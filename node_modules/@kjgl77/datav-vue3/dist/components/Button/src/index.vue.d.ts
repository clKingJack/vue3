import type { Component } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    fontSize: {
        type: globalThis.PropType<number>;
        default: number;
    };
    color: {
        type: globalThis.PropType<string>;
        default: string;
    };
    fontColor: {
        type: globalThis.PropType<string>;
        default: string;
    };
    bg: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    border: {
        type: globalThis.PropType<string | Component>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<globalThis.ExtractPropTypes<{
    fontSize: {
        type: globalThis.PropType<number>;
        default: number;
    };
    color: {
        type: globalThis.PropType<string>;
        default: string;
    };
    fontColor: {
        type: globalThis.PropType<string>;
        default: string;
    };
    bg: {
        type: globalThis.PropType<boolean>;
        default: boolean;
    };
    border: {
        type: globalThis.PropType<string | Component>;
        default: string;
    };
}>>, {
    fontSize: number;
    color: string;
    fontColor: string;
    bg: boolean;
    border: string | Component;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
