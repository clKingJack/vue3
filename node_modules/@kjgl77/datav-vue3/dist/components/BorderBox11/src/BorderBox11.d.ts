import type { ExtractPropTypes } from 'vue';
declare const borderBox11Props: {
    title: {
        type: StringConstructor;
        default: string;
    };
    titleWidth: {
        type: NumberConstructor;
        default: number;
    };
    animate: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: globalThis.PropType<string[]>;
        default: () => never[];
    };
    backgroundColor: {
        type: StringConstructor;
        default: string;
    };
};
export type BorderBox11Props = ExtractPropTypes<typeof borderBox11Props>;
declare const _default: import("vue").DefineComponent<{
    title: {
        type: StringConstructor;
        default: string;
    };
    titleWidth: {
        type: NumberConstructor;
        default: number;
    };
    animate: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: globalThis.PropType<string[]>;
        default: () => never[];
    };
    backgroundColor: {
        type: StringConstructor;
        default: string;
    };
}, {
    width: globalThis.Ref<number>;
    height: globalThis.Ref<number>;
    initWH: (resize?: boolean) => Promise<unknown>;
    filterId: globalThis.Ref<string>;
    mergedColor: globalThis.ComputedRef<string[]>;
    borderBox11: globalThis.Ref<null>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<ExtractPropTypes<{
    title: {
        type: StringConstructor;
        default: string;
    };
    titleWidth: {
        type: NumberConstructor;
        default: number;
    };
    animate: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: globalThis.PropType<string[]>;
        default: () => never[];
    };
    backgroundColor: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    title: string;
    animate: boolean;
    color: string[];
    backgroundColor: string;
    titleWidth: number;
}, {}>;
export default _default;
